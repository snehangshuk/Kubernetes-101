## Setup Environment

This section describes what, how, and where to install the software needed for this lab. This lab is designed for a BYOL (Bring Your Own Laptop) style hands-on-lab.

### Hardware

- Operating System
- Virtual Box or KVM

### Software
 
#### Development tools

Make sure to have the following tools/packages installed:

- GIT

#### Start the Kubernetes cluster

Play with Kubernetes is a playground which allows users to run K8s clusters in a matter of seconds. Browse to open link:https://labs.play-with-k8s.com/[Play with Kubernetes]

Follow the steps to create the Kubernetes cluster:

- Login first, which you can do either with a Docker ID or a GitHub account.
- Click ADD NEW INSTANCE to create node1 of the Kubernetes cluster. This will open a command terminal on left
hand side with three steps.
IMPORTANT: Third step is optional will not perform the step.
- Initializes cluster master node:
[source,bash,subs="normal,attributes"]
----
$ kubeadm init --apiserver-advertise-address $(hostname -i) --pod-network-cidr 10.5.0.0/16
----
That will take a couple of minutes, during which time youâ€™ll see a lot of activity in the terminal.
You will see something like this at the end:
[source,bash,subs="normal,attributes"]
----
Your Kubernetes master has initialized successfully!

To start using your cluster, you need to run (as a regular user):

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  http://kubernetes.io/docs/admin/addons/

You can now join any number of machines by running the following on each node
as root:

kubeadm join --token SOMETOKEN SOMEIPADDRESS --discovery-token-ca-cert-hash SOMESHAHASH
----
- Add another instance, click ADD NEW INSTANCE
- Join `node2` by running the following on the node as root. Copy the command from output of initializing Kubernetes master on node1.
[source,bash,subs="normal,attributes"]
----
$ kubeadm join --token SOMETOKEN SOMEIPADDRESS --discovery-token-ca-cert-hash SOMESHAHASH
----
Tip: SOMETOKEN, SOMEIPADDRESS, and SOMESHAHASH value can be retireved from from output of initializing Kubernetes master on `node1`. 
- Initialize cluster networking:
[source,bash,subs="normal,attributes"]
----
$ kubectl apply -f https://raw.githubusercontent.com/cloudnativelabs/kube-router/master/daemonset/kubeadm-kuberouter.yaml
----
You will see an output like this:
[source,bash,subs="normal,attributes"]
----
serviceaccount "weave-net" created
clusterrole "weave-net" created
clusterrolebinding "weave-net" created
role "weave-net" created
rolebinding "weave-net" created
daemonset "weave-net" created
----
Your cluster is set up!
